import numpy as np

class DirectionalComplexPlaneWave2D:
    """
    A 2D directional complex plane wave source (Ez polarization)
    Emits wave only in specified direction ('x+' or 'x-')
    """

    def __init__(
        self,
        wavelength: float,
        period: float,
        amplitude: complex = 1.0 + 0.0j,
        phase_shift: float = 0.0,
        direction: str = "x+",
        name: str = None,
        pulse: bool = False,
        cycle: int = 5,
    ):
        self.wavelength = wavelength
        self.period = period
        self.amplitude = amplitude
        self.phase_shift = phase_shift
        self.name = name
        self.pulse = pulse
        self.cycle = cycle
        self.direction = direction
        self.grid = None  # To be set after adding to simulation

    def bind_grid(self, grid):
        self.grid = grid
        self.time_step = grid.time_step
        self.omega = 2 * np.pi / self.period
        self.k = 2 * np.pi / self.wavelength
        self.t0 = self.cycle * self.period / self.time_step if self.pulse else 0

    def update_E(self, t):
        if self.grid is None:
            raise ValueError("Grid not bound. Call bind_grid(grid) after adding source.")

        # Get grid info
        Nx, Ny = self.grid.shape[0], self.grid.shape[1]
        X, Y = np.meshgrid(np.arange(Nx), np.arange(Ny), indexing="ij")

        # Time factor (Gaussian or continuous wave)
        if self.pulse:
            envelope = np.exp(-((t - self.t0) / (0.5 * self.t0))**2)
        else:
            envelope = 1.0

        phase = self.k * X - self.omega * t + self.phase_shift
        Ez = envelope * self.amplitude * np.exp(1j * phase)

        # Directional filtering
        if self.direction == "x+":
            Ez[X < Nx // 2] = 0
        elif self.direction == "x-":
            Ez[X > Nx // 2] = 0
        else:
            raise ValueError("Invalid direction. Use 'x+' or 'x-'.")

        # Update Ez field (assumes Ez polarization at z=0)
        self.grid.E[:, :, 0] += Ez.real  # or use complex if your grid supports it