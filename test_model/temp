import numpy as np

def fresnel_coefficients(n1, n2, theta_i_deg, polarization='s'):
    """
    計算菲涅爾反射與透射係數（振幅與能量）.

    參數:
    - n1: 入射介質折射率
    - n2: 透射介質折射率
    - theta_i_deg: 入射角 (degrees)
    - polarization: 's' 或 'p' 偏振

    回傳:
    - r: 振幅反射係數
    - t: 振幅透射係數
    - R: 能量反射率
    - T: 能量透射率
    """

    theta_i = np.radians(theta_i_deg)
    sin_theta_t = n1 / n2 * np.sin(theta_i)

    # 全反射檢查
    if np.abs(sin_theta_t) > 1:
        return np.nan, np.nan, 1.0, 0.0  # 全反射：R=1, T=0

    theta_t = np.arcsin(sin_theta_t)

    cos_theta_i = np.cos(theta_i)
    cos_theta_t = np.cos(theta_t)

    if polarization == 's':
        r = (n1 * cos_theta_i - n2 * cos_theta_t) / (n1 * cos_theta_i + n2 * cos_theta_t)
        t = (2 * n1 * cos_theta_i) / (n1 * cos_theta_i + n2 * cos_theta_t)
    elif polarization == 'p':
        r = (n2 * cos_theta_i - n1 * cos_theta_t) / (n2 * cos_theta_i + n1 * cos_theta_t)
        t = (2 * n1 * cos_theta_i) / (n2 * cos_theta_i + n1 * cos_theta_t)
    else:
        raise ValueError("Polarization must be 's' or 'p'")

    R = abs(r)**2
    T = (n2 * cos_theta_t) / (n1 * cos_theta_i) * abs(t)**2

    return r, t, R, T

# 範例：空氣到矽（n2=3.48）入射角 60°
n1 = 1.0
n2 = 3.48
theta_i_deg = 60

for pol in ['s', 'p']:
    r, t, R, T = fresnel_coefficients(n1, n2, theta_i_deg, polarization=pol)
    print(f"{pol}-polarization:")
    print(f"  r = {r:.4f}, t = {t:.4f}")
    print(f"  R = {R:.4f}, T = {T:.4f}")
    print()